₹swapping₹     #echo "enter first number"
read -p 'enter first number : ' num1
#echo "enter second number"
read -p 'enter second number : ' num2
echo "********Numbers Before Swapping*******"
echo "num1 = $num1 & num2 = $num2"
num1=$(( $num1+$num2 ))
num2=$(( $num1-$num2 ))
num1=$(( $num1-$num2 ))
echo "********Numbers After Swapping*******"
echo "num1 = $num1 & num2 = $num2"

₹palindrome₹read -p "Enter the string to check for palindrome nature : " str
reverse=$(echo "$str" | rev)
clear
if [[ $(rev <<< $str) == "$str" ]]
then
	echo "$str is a Palindrome string"
else
	echo "$str is not a Plaindrome string"
fi

₹loops₹        #while loop (executed only if condition is true)
n=1
while [ $n -le 10 ] # (( $n <= 10 ))
    do
        echo "$n"
	n=$(( n+1 )) # (( n++ ))
    done

#until loop (executed only when the condition is false)
m=1
until [ $m -ge 10 ] #(( $n >= 10 ))
    do
        echo "$m"
        m=$(( m+2 ))
    done

#for loop
for i in 1 2 3 4 5 #{1..10} , {1..10..2}
do
    echo $i
done

for (( i=0; i<5; i++ ))
do
    echo $i
done

₹large of 3₹       #! /bin/bash
#while loop (executed only if condition is true)
n=1
while [ $n -le 10 ] # (( $n <= 10 ))
    do
        echo "$n"
	n=$(( n+1 )) # (( n++ ))
    done

#until loop (executed only when the condition is false)
m=1
until [ $m -ge 10 ] #(( $n >= 10 ))
    do
        echo "$m"
        m=$(( m+2 ))
    done

#for loop
for i in 1 2 3 4 5 #{1..10} , {1..10..2}
do
    echo $i
done

for (( i=0; i<5; i++ ))
do
    echo $i
done


₹filetype₹      #! bin/bash
read -p 'Enter the filename : ' filenm
array=( $(find . -name $filenm\* -print) )
temp=${#array[@]}
if [[ $temp > 0 ]]
then
for i in ${array[@]}
do
    extension="${i##*.}"
echo $extension
done
else
	echo "No file conatining with name    $filenm   exist"
fi


₹facrorial₹       read -p 'enter the number whose factorial is to be found : ' num
fact=1
for (( i=1; i<=$num; i++ ))
do
	fact=$(( $fact * $i ))
done
echo "Factorial of $num is $fact"

₹odd or even₹      read -p 'Enter the number to be checked : ' num
if(( $num==0 ))
then
	echo "ZERO is neither ODD nor EVEN"
elif(( $num%2 == 0 ))
then
	echo "$num is an EVEN number"
else
	echo "$num is an ODD number"
fi

₹arithmetic oper₹      read -p 'Enter the first number  : ' num1
read -p 'Enter the second number : ' num2
sum=$(echo "$num1+$num2" | bc)
dif=$(echo "$num1-$num2" | bc)
mul=$(echo "$num1*$num2" | bc)
div=$(echo "scale=3;$num1/$num2" | bc)
echo "--------------Result-------------"
echo "$num1 + $num2 = $sum"
echo "$num1 - $num2 = $dif"
echo "$num1 * $num2 = $mul"
echo "$num1 / $num2 = $div"
echo "---------------------------------"


₹sum of digits₹      read -p 'Enter the number whose sum of digits is to be find : ' num
temp=$num
sum=0
while (( $num > 0 ))
do
	rem=$(( $num%10 ))
	sum=$(( $sum+$rem ))
	num=$(( $num/10 ))
done
echo "Sum of digits of $temp is $sum"


₹prime₹       read -p 'Enter the number to be checked for prime ntaure : ' num
if(( ($num <= 0) && ($num != 1)  ))
then
	echo "You entered $num , Prime numbers are numbers greater than 1 & have 1 and that number itself as divisor"
elif(( $num == 1 ))
then
	echo "$num is neither prime  nor composite"
else
	flag=0;
	for (( i=2; i<=$num/2; i++ ))
	do
		if(( $num % $i == 0))
			then
			flag=1;
			break;
		fi
	done
	if(( $flag == 0 ))
	then
		echo "$num is a prime number"
	else
		echo "$num is not a prime number"
	fi
fi

₹sum of list₹       
read -p 'Enter the number of elements to be entered in the list : ' limit
nmbrlist=()
sum=0
for(( i=1; i<=$limit; i++ ))
do
	echo "Enter element @ position $i"
	read num
	nmbrlist[$i]=$num;
	sum=$(( $sum + ${nmbrlist[$i]} ))
done
clear
echo "The entered list is :"
echo "${nmbrlist[@]}"
echo "The sum of the elements of the list is $sum"


₹menu driven₹
while :
do
clear
echo "MENU DRIVEN CALCULATOR"
echo "----------------------"
echo "enter 1 for addition"
echo "enter 2 for substraction"
echo "enter 3 for multiplication"
echo "enter 4 for division"
echo "enter 0 for exiting"
echo "-----------------------------------"
read opt
case $opt in
1)
	echo "------------------------------------"
	read -p 'Enter the first number  : ' num1
	read -p 'Enter the second number : ' num2
	sum=$(echo "$num1+$num2" | bc)
	echo "$num1 + $num2 = $sum"
	echo "------------------------------------"
	read enterKey;;
2)
	echo "------------------------------------"
        read -p 'Enter the first number  : ' num1
        read -p 'Enter the second number : ' num2
        dif=$(echo "$num1-$num2" | bc)
        echo "$num1 - $num2 = $dif"
        echo "------------------------------------"
	read enterKey;;
3)
	echo "------------------------------------"
        read -p 'Enter the first number  : ' num1
        read -p 'Enter the second number : ' num2
        mul=$(echo "$num1*$num2" | bc)
        echo "$num1 * $num2 = $mul"
        echo "------------------------------------"
	read enterKey;;
4)
	echo "------------------------------------"
        read -p 'Enter the first number  : ' num1
        read -p 'Enter the second number : ' num2
       	div=$(echo "$num1/$num2" | bc)
        echo "$num1 / $num2 = $div"
        echo "------------------------------------"
	read enterKey;;
0)
	echo "------------------------------------"
	echo "Exiting...";
	echo "------------------------------------"
	exit 1;;
*)
	echo "------------------------------------------"
	echo "$opt is an INVALID OPTION.......TRY AGAIN"
	echo "------------------------------------------";;
esac
done
